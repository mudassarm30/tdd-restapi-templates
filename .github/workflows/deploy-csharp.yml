name: .NET Core Lambda Deployment

on:
  push:
    branches: [ csharp ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1

    - name: Build with dotnet
      run: |
        cd csharp
        dotnet build ./RestApi/RestApi.csproj --configuration Release
        dotnet build ./RestApi.Tests/RestApi.Tests.csproj --configuration Release

    - name: Test with dotnet
      run: |
        cd csharp
        dotnet test

    - name: Publish with dotnet
      run: |
        cd csharp
        dotnet lambda package --configuration Release --framework netcoreapp3.1 --output-package ./bin/Release/netcoreapp3.1/deploy-package.zip

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy to AWS Lambda
      run: |
        cd csharp
        aws lambda update-function-code --function-name ${{ env.AWS_LAMBDA_FUNCTION_NAME }} --zip-file fileb://./bin/Release/netcoreapp3.1/deploy-package.zip
        aws apigateway create-deployment --rest-api-id ${{ env.AWS_API_GATEWAY_REST_API_ID }} --stage-name production --stage-description 'Production' --description 'New deployment'
      
      env:
        AWS_LAMBDA_FUNCTION_NAME: csharp-restapi-production
        AWS_API_GATEWAY_REST_API_ID: isia2j0uf8
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1